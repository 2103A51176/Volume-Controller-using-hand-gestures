'''
directly taken from coincent class (since they havce discussed each and every point)
'''
import cv2
import mediapipe as mp
import math
from ctypes import cast,POINTER
from comtypes import CLSCTX_ALL
from pycaw.pycaw import AudioUtilities,IAudioEndpointVolume
import numpy

devices=AudioUtilities.GetSpeakers()
interface=devices.Activate(
    IAudioEndpointVolume._iid_,CLSCTX_ALL,None)
volume=cast(interface,POINTER(IAudioEndpointVolume))
#print("Is it Mute:",volume.GetMute())
#print("volume level:",volume.GetMasterVolumeLevel())
#print("volume range:",volume.GetVolumeRange())
#volume.GetMasterVolumeLevel(-20.0,None)

cap=cv2.VideoCapture(0)

mpDraw=mp.solutions.drawing_utils
mpHands=mp.solutions.hands
hands=mpHands.Hands()

while True:
    success, img=cap.read()
    imgRGB=cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
    results=hands.process(imgRGB)
    if results.multi_hand_landmarks:
        for handlms in results.multi_hand_landmarks:
            lmlist=[]
            for id, lm in enumerate(handlms.landmark):
                h,w,c=img.shape
                cx,cy=int(lm.x*w),int(lm.y*h)
                lmlist.append([id,cx,cy])
                #print(id,lm)
                #mpDraw.draw_landmarks(img,handlms,mpHands.HAND_CONNECTIONS)
            if lmlist:
                x1,y1=lmlist[4][1],lmlist[4][2]
                x2,y2=lmlist[8][1],lmlist[8][2]
                cv2.circle(img,(x1,y1),15,(1,23,123),cv2.FILLED)
                cv2.circle(img,(x2, y2), 15, (1, 23, 123), cv2.FILLED)
                cv2.line(img,(x1,y1),(x2,y2),(1,23,123),4)
                z1,z2=(x1+x2)//2,(y1+y2)//2
                length=math.hypot(x2-x1,y2-y1)
                #print(length)
                volRange=volume.GetVolumeRange()
                minVol=volRange[0]
                maxVol=volRange[1]
                vol=numpy.interp(length,[50,100],[minVol,maxVol])
                volPer=numpy.interp(length,[50,100],[0,100])
                volume.SetMasterVolumeLevel(vol,None)
                cv2.putText(img,str(int(volPer)),(40,450),cv2.FONT_HERSHEY_COMPLEX,5,(1,3,5),3)
                volBar=numpy.interp(length,[50,300],[400,150])
                cv2.rectangle(img,(50,150),(85,400),(123,213,122),3)
                cv2.rectangle(img, (50, int(volBar)), (85, 400), (0,231,23), cv2.FILLED)
    cv2.imshow("Image",img)
    cv2.waitKey(1)
